Hi Chunli,

The script we use for imagery orthorectification is called "pgc_ortho.py" and it lives in the top level of the "imagery_utils" repo on PGC's public GitHub:
https://github.com/PolarGeospatialCenter/imagery_utils

First you'll need a suitable Python environment in order to run the script.  I realized it would be simpler if I help set that up by installing a Conda environment on Pleiades.
You can activate the environment by running this command:
source /nobackupp17/elarour/coastlinedata/code/miniconda3/bin/activate /nobackupp17/elarour/coastlinedata/code/miniconda3/envs/pgc

Then run the pgc_ortho.py script to print argument help information:
python /nobackupp17/elarour/coastlinedata/code/imagery_utils/pgc_ortho.py --help

The settings I have used in the past to orthorectify imagery for your coastline derivation work are as follows:
- Orthorectify using EGM2008 geoid model to best approximate coastal height
- Target projection: 3413
- Output data type: UInt16
- No stretch (no atmospheric correction, just raw digital numbers)
- Nearest neighbor resampling

This translates to the following argument settings for pgc_ortho.py:
python pgc_ortho.py <input_imagery_dir> <output_ortho_dir> --dem <dem_tif> --epsg 3413 --outtype UInt16 --stretch ns --resample near --no-pyramids

I copied the EGM2008 Arctic DEM here:
/nobackupp17/elarour/coastlinedata/EGM2008_Arctic.tif

Then I presume we'll have to figure out how to run the script on the NAS compute nodes.  That might require help from NAS support.

Hopefully this information is a good start!

Erik
